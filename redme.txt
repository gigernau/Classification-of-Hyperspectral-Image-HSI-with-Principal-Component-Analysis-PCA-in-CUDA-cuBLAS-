### SETUP

1) sudo apt update && sudo apt upgrade

2) Install pip3 : sudo apt install python3-pip  && python3 -m pip install --upgrade pip

3) Install python modules : python3 -m pip install -r requirements.txt
	

## Install C++ CUDA e CUBLAS e MATIO

4) Install gls e cblas:
	sudo apt install libopenblas-base libopenmpi-dev
	sudo apt-get install libgsl-dev

5) Install Cuda: (set path $PATH von /usr/local/cuda/bin for nvcc )

	echo "# Add CUDA bin & library paths:" >> ~/.bashrc
	echo "export PATH=/usr/local/cuda/bin:$PATH" >> ~/.bashrc
	echo "export LD_LIBRARY_PATH=/usr/local/cuda/lib:$LD_LIBRARY_PATH" >> ~/.bashrc
	source ~/.bashrc








### Example usage


# 1) Set VISDOM enviroment in another shell for view image and data plot on browser
	python3 -m visdom.server

# 2) TRAIN MODEL
	python3 main.py --model li --dataset PaviaU --training_sample 0.7  --epoch 50 --cuda 0 --pca 10

# 3) Compile PCA in C++ with Cuda
	nvcc -Xcompiler -fPIC -shared -o pca.so main.cpp kernel_pca.cu -lcublas -lm -lgsl -lgslcblas
	
# 4) INFERCENCE
	python3 inference.py --cuda 0 --image PaviaU --checkpoint models/pu/5_PU.pth --model li --pca 5




For check absorbed milliwatt/sec on the Nvidia Jetson Nano and save in PcaConsumptions.txt: 
	 sudo watch -t -n 1 "(cat /sys/bus/i2c/drivers/ina3221x/6-0040/iio:device0/in_power0_input) | tee -a PcaConsumptions.txt"


# Compute kappa coefficient
# k ≤0 concordanza scarsissima
# k =0.01-0.20 concordanza scarsa
# k =0.21-0.40 concordanza discreta
# k =0.41-0.60 concordanza moderata
# k =0.61-0.80 concordanza buona
# k =0.81-1.00 concordanza ottima

# K = (pa- pe) / (1-pe)

# dove (pa) è la somma della prima diagonale della matrice divisa per il totale dei giudizi e rappresenta la percentuale di giudizio
# di fatto, concorde tra i giudici.
# mentre (pe) è il prodotto dei totali positivi sommato a quelli negativi, il tutto diviso per il quadrato del totale dei giudizi,
# e rappresenta la probabilità di accordo casualmente